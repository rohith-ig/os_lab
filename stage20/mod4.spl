alias fnum R1;
alias pid R2;
alias word R3;

if (fnum == 2) then
    alias page R3;
    alias block R4;
    multipush(R1,R2,R3,R4);
    R1 = 3;
    R2 = pid;
    call MOD_0;
    multipop(R1,R2,R3,R4);
    [DISK_STATUS_TABLE+1] = 0;
    [DISK_STATUS_TABLE+2] = page;
    [DISK_STATUS_TABLE+3] = block;
    print "loading";
    print page;
    load(page,block);
    [PROCESS_TABLE + pid*16 + 4] = WAIT_DISK;
    call MOD_5;
    return;
endif;


if (fnum == 3) then 
    multipush(R1,R2,R3);
    fnum = 8;
    call MOD_0;
    multipop(R1,R2,R3);
    breakpoint;
    print word;
    multipush(R1,R2,R3);
    fnum = 9;
    call MOD_0;
    multipop(R1,R2,R3);
    return;
else    
    if (fnum == 4) then     
        breakpoint;
        multipush(R1,R2,R3);
        fnum = 8;
        call MOD_0;
        multipop(R1,R2,R3);
        read;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_TERMINAL;
        multipush(R1,R2,R3);
        call MOD_5;
        multipop(R1,R2,R3);
        [[PTBR + (2*(word/512))]*512 + word%512] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 8];
        return;
    endif;
endif;
return;
