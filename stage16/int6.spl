[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 7;

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = userSP;
 
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;

alias physicalPageNumber R1;
alias offset R2;
alias physicalAddress R3;
alias page_table R5;

page_table = PTBR;

physicalPageNumber = [page_table + 2 * ((userSP - 4) / 512)];
offset = (userSP - 4) % 512;
physicalAddress = physicalPageNumber * 512 + offset;

alias fileDescriptor R4;
fileDescriptor = [physicalAddress];
breakpoint;
if (fileDescriptor == -1) then  
    multipush(R0,R1,R2,R3,R4);
    R1 = 4;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = [PTBR + 2*((userSP-3)/512)] + (userSP-3)%512;
    call MOD_4;
    multipop(R0,R1,R2,R3,R4);
    [[PTBR + 2*((userSP-1)/512)] + (userSP-1)%512] = 0;
else
    [[PTBR + 2*((userSP-1)/512)] + (userSP-1)%512] = -1;
endif;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
SP = userSP;
ireturn; 



