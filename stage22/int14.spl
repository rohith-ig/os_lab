alias usp R0;
alias num R1;

usp = SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = usp;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;

num = [[PTBR + 2*((usp-5)/512)]*512 + (usp-5)%512];
if (num == 19) then
    alias i R2;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 19;
    i = ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]+1)*512-16;
    alias descr R3;
    descr = [[PTBR + 2*((usp-4)/512)]*512 + (usp-4)%512];
    if ((descr<0) || (descr>7) || ([i+2*descr]!=1)) then
        [[PTBR + 2*((usp-1)/512)]*512 + (usp-1)%512] = -1;
    else
        while (([SEMAPHORE_TABLE + 4*[i+2*descr+1]] != -1) && ([SEMAPHORE_TABLE + 4*[i+2*descr+1]] != [SYSTEM_STATUS_TABLE+1])) do
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_SEMAPHORE;
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5] =  [i+2*descr+1];
            multipush(R0,R1,R2,R3);
            call MOD_5;
            multipop(R0,R1,R2,R3);
        endwhile;
        [SEMAPHORE_TABLE + 4*[i+2*descr+1]] = [SYSTEM_STATUS_TABLE + 1];
        [[PTBR + 2*((usp-1)/512)]*512 + (usp-1)%512] = 0;
    endif;
endif;

if (num == 20) then
    alias i R2;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 20;
    i = ([PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]+1)*512-16;
    alias descr R3;
    descr = [[PTBR + 2*((usp-4)/512)]*512 + (usp-4)%512];
    if ((descr<0) || (descr>7) || ([i+2*descr]!=1)) then
        [[PTBR + 2*((usp-1)/512)]*512 + (usp-1)%512] = -1;
    else
        if ([SEMAPHORE_TABLE + 4*[i+2*descr+1]] != -1) then
            if ([SEMAPHORE_TABLE + 4*[i+2*descr+1]] != [SYSTEM_STATUS_TABLE+1]) then
                 [[PTBR + 2*((usp-1)/512)]*512 + (usp-1)%512] = -2;
            else 
                [SEMAPHORE_TABLE + 4*[i+2*descr+1]] = -1;
                alias j R4;
                j = 0;
                while (j<16) do
                    if (([PROCESS_TABLE + j*16 + 4] == WAIT_SEMAPHORE) && ([PROCESS_TABLE + j*16 + 5] == [i+2*descr+1])) then
                        [PROCESS_TABLE + j*16 + 4] = READY;
                        [PROCESS_TABLE + j*16 + 5] = -1;
                    endif;
                    j = j + 1;
                endwhile;
                [[PTBR + 2*((usp-1)/512)]*512 + (usp-1)%512] = 0;
            endif;
        endif;
    endif;
endif;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
SP = usp;
ireturn;



